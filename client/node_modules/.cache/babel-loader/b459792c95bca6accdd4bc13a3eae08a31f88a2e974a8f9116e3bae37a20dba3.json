{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bwelp\\\\Desktop\\\\Cognixia\\\\Cognixia_Projects\\\\Project16\\\\ForumApp\\\\client\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport \"../styles/Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const signUp = () => {\n    fetch(\"http://localhost:4000/api/register\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password,\n        username\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.error_message) {\n        alert(data.error_message);\n      } else {\n        alert(\"Account created successfully!\");\n        navigate(\"/\");\n      }\n    }).catch(err => console.error(err));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    signUp();\n    setEmail(\"\");\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex align-items-center register\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"regCard\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"reg-row\",\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"registerTitle\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 58\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"registerForm\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mt-4 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  htmlFor: \"username\",\n                  children: \"Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"username\",\n                  id: \"username\",\n                  required: true,\n                  value: username,\n                  placeholder: \"Enter a Username\",\n                  onChange: e => setUsername(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mt-4 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  htmlFor: \"email\",\n                  children: \"Email Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"email\",\n                  id: \"email\",\n                  required: true,\n                  value: email,\n                  placeholder: \"Enter an Email Address\",\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mt-4 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  htmlFor: \"password\",\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    name: \"password\",\n                    id: \"password\",\n                    required: true,\n                    value: password,\n                    placeholder: \"Enter a Password\",\n                    onChange: e => setPassword(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"registerBtn\",\n                type: \"submit\",\n                children: \"Create Account!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"0wwCQRuxQZug1zjHoE2OgRCjiDk=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Container","Form","Button","Row","Card","InputGroup","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","username","setUsername","email","setEmail","password","setPassword","navigate","signUp","fetch","method","body","JSON","stringify","headers","then","res","json","data","error_message","alert","catch","err","console","error","handleSubmit","e","preventDefault","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","Group","Label","htmlFor","Control","type","name","id","required","value","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/bwelp/Desktop/Cognixia/Cognixia_Projects/Project16/ForumApp/client/src/components/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from 'react-bootstrap/Card'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport \"../styles/Register.css\"\r\n\r\nconst Register = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const signUp = () => {\r\n        fetch(\"http://localhost:4000/api/register\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                email,\r\n                password,\r\n                username,\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.error_message) {\r\n                    alert(data.error_message);\r\n                } else {\r\n                    alert(\"Account created successfully!\");\r\n                    navigate(\"/\");\r\n                }\r\n            })\r\n            .catch((err) => console.error(err));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        signUp();\r\n        setEmail(\"\");\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n    };\r\n    return (\r\n        <>\r\n            <Container className=\"d-flex align-items-center register\">\r\n                <Card className=\"regCard\">\r\n                    <Row className=\"reg-row\">\r\n                        <Container className=\"mt-5\">\r\n                            <h1 className='registerTitle'>Register</h1>\r\n                            <p>\r\n                                Already have an account? <Link to='/'>Login</Link>\r\n                            </p>\r\n                        </Container>\r\n\r\n                        <Container>\r\n                            <Form className=\"registerForm\" onSubmit={handleSubmit}>\r\n\r\n                                <Form.Group className=\"mt-4 mb-4\">\r\n                                    <Form.Label htmlFor=\"username\">Username:</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='username'\r\n                                        id='username'\r\n                                        required\r\n                                        value={username}\r\n                                        placeholder=\"Enter a Username\"\r\n                                        onChange={(e) => setUsername(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"mt-4 mb-4\">\r\n                                    <Form.Label htmlFor='email'>Email Address:</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='email'\r\n                                        id='email'\r\n                                        required\r\n                                        value={email}\r\n                                        placeholder=\"Enter an Email Address\"\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"mt-4 mb-4\">\r\n                                    <Form.Label htmlFor=\"password\">Password:</Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control\r\n                                            type='password'\r\n                                            name='password'\r\n                                            id='password'\r\n                                            required\r\n                                            value={password}\r\n                                            placeholder=\"Enter a Password\"\r\n                                            onChange={(e) => setPassword(e.target.value)}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Button className='registerBtn' type='submit'>Create Account!</Button>\r\n                            </Form>\r\n                        </Container>\r\n                    </Row>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}